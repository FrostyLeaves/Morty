#include "../Internal/internal_uniform_global.hlsl"
#include "../Internal/internal_functional.hlsl"
#include "../Internal/internal_mesh.hlsl"
#include "../Voxel/voxel_function.hlsl"

struct VS_OUT
{    
    float4 pos : SV_POSITION;
    float3 normal : NORMAL;
    uint voxelIdx : VOXEL_IDX;
};

VS_OUT VS_MAIN(VS_IN input, uint INSTANCE_ID : SV_InstanceID)
{
    VS_OUT output;

    uint3 n3Coord = InstanceIdToVoxelCoord(voxelMapSetting, INSTANCE_ID);

    float3 voxelWorldPosition = VoxelCoordToWorldPosition(voxelMapSetting, n3Coord);

    VoxelClipmap clipmap = voxelMapSetting.vClipmap[voxelMapSetting.nClipmapIdx];

    float4 worldPos = float4(voxelWorldPosition + input.pos * float3(clipmap.fVoxelSize, clipmap.fVoxelSize, clipmap.fVoxelSize), 1.0f);


    output.pos = mul(worldPos, u_matCamProj);
    output.normal = input.normal;
    output.voxelIdx = INSTANCE_ID;

    return output;
}
