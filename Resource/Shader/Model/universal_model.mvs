#include "../Internal/internal_uniform_global.hlsl"
#include "../Internal/internal_functional.hlsl"
#include "../Internal/internal_uniform_model.hlsl"
#include "../Model/universal_vsout.hlsl"



VS_OUT VS_MAIN(VS_IN input, uint INSTANCE_ID : SV_InstanceID)
{
    VS_OUT output;

    float4 vertexPos = getModelVertexPosition(input, INSTANCE_ID);
    float4 worldPos = mul(vertexPos, MESH_WORLD_MATRIX);
    
    output.worldPos = worldPos.xyz;
    output.pos = mul(worldPos, u_matCamProj);
    output.depth = output.pos.z;
    output.normal = normalize(mul(input.normal, MESH_NORMAL_MATRIX));
    output.tangent = normalize(mul(input.tangent, MESH_NORMAL_MATRIX));
    output.bitangent = normalize(cross(output.tangent, output.normal));
    output.uv = input.uv;

    return output;
}
