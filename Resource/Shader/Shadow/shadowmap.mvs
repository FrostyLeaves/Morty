#include "Internal/internal_model.hlsl"


//VS    per render
[[vk::binding(0,1)]]cbuffer cbSceneMatrix : register(b1)
{
    float4x4 u_matCamProj[CASCADED_SHADOW_MAP_NUM]; // world to proj
};

struct VS_OUT_EMPTY
{
    float4 pos : SV_POSITION;
};

VS_OUT_EMPTY VS_MAIN(VS_IN input, uint ViewIndex : SV_ViewID, uint INSTANCE_ID : SV_InstanceID)
{
    VS_OUT_EMPTY output;

    float4 vertexPos = getModelVertexPosition(input, INSTANCE_ID);
    float4 worldPos = mul(vertexPos, MESH_WORLD_MATRIX);
    
    output.pos = mul(worldPos, u_matCamProj[ViewIndex]);

    return output;
}
