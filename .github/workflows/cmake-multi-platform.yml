# This starter workflow is for a CMake project running on multiple platforms. There is a different starter workflow if you just want a single platform.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-single-platform.yml
name: CMake on multiple platforms

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false

      matrix:
        os: [ubuntu-latest]
        build_type: [Release]
        include:
          - os: ubuntu-latest
            preset_name: Linux-Test
            build_name: Linux-Test
            build_path: linux_test
            test_name: Linux
    
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        submodules: recursive
    
    - name: Install package
      uses: awalsh128/cache-apt-pkgs-action@latest
      with:
        packages: gcovr
        
    - name: Get latest CMake and Ninja
      uses: lukka/get-cmake@latest
      with:
        cmakeVersion: 3.28.0
        ninjaVersion: 1.11.1
    
    - name: Prepare Vulkan SDK
      uses: humbletim/setup-vulkan-sdk@v1.2.0
      with:
        vulkan-query-version: 1.3.204.0
        vulkan-components: Vulkan-Headers, Vulkan-Loader
        vulkan-use-cache: true

    - name: Run vcpkg
      uses: lukka/run-vcpkg@v10
      with:
        vcpkgDirectory: '${{ github.workspace }}/ThirdParty/vcpkg'

    - name: Run CMake Build
      uses: lukka/run-cmake@v10
      with:
        cmakeListsTxtPath: '${{ github.workspace }}/Morty/CMakeLists.txt'
        configurePreset: ${{ matrix.preset_name }}
        buildPreset: ${{ matrix.build_name }}

    - name: Test
      run: |
          cd ${{ github.workspace }}/Morty
          ctest --preset ${{ matrix.test_name }} -C Release
    
    - name: Generate Test Coverage
      run: | 
        gcovr --root ${{ github.workspace }}/Build/${{ matrix.build_path }} --filter Core/ --coveralls ./tmp/coveralls.json
    
    - name: Send to Coveralls
      uses: coverallsapp/github-action@v2
      with:
        flag-name: run-${{ join(matrix.*, '-') }}
        file: ./tmp/coveralls.json
        parallel: true
        github-token: ${{ secrets.GITHUB_TOKEN }}
